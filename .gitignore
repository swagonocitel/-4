import itertools

def word_to_number(word, mapping):
    return int(''.join(str(mapping[char]) for char in word))

def main():
    unique_chars = set('ХРУСТГРОХОРРРРРРРР')
    if len(unique_chars) > 10:
        print("Слишком много уникальных букв для замены цифрами.")
        return
    
    for perm in itertools.permutations(range(10), len(unique_chars)):
        mapping = dict(zip(unique_chars, perm))
        
        # Проверяем, что старшие буквы не равны нулю
        if mapping['Х'] == 0 or mapping['Г'] == 0 or mapping['Р'] == 0:
            continue

        xrust = word_to_number('ХРУСТ', mapping)
        grokhot = word_to_number('ГРОХОТ', mapping)
        rrrrrrrrrr = word_to_number('РРРРРРРРРР', mapping)

        if xrust * grokhot == rrrrrrrrrr:
            print(f"Найдено решение: {mapping}")
            return
    
    print("Решение не найдено.")

if __name__ == "__main__":
    main()
